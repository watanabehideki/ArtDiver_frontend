import React, { useState } from 'react'
import styled from 'styled-components'

import { Nav, NavLink, Bars, SidebarCloseIcon, NavMenu, NavBtn, NavBtnLink } from './NavbarElements'
import axios from 'axios'
import { SidebarData } from '../Sidebar/SidebarData'
import SubMenu from '../Sidebar/SubMenu'

const Navbar = () => {
  const handleSignOut = (event) => {
    event.preventDefault();
    axios({
      method: 'DELETE',
      url: 'http://localhost:4001/auth/sign_out',
      data: JSON.parse(localStorage.user)
    })
    .then(() => {
      localStorage.removeItem('user')
      window.location = '/'
    })
  }

  const currentUser = localStorage.getItem('user')

  const [sidebar, setSidebar] = useState(false)
  const showSidebar = () => setSidebar(!sidebar)

  const SidebarNav = styled.nav`
    background: #000;
    opacity: 0.9;
    width: 250px;
    height: 100vh;
    display: flex;
    justify-content: center;
    position: fixed;
    top: 0;
    right: ${({ sidebar }) => (sidebar ? '0' : '-100%')};
    transition: 500ms;
    z-index: 10;
  `;

  const SidebarWrap = styled.div`
    padding-top: 60px;
    width: 100%;
  `;

  return (
    <>
      <Nav>
        <NavLink to='/'>
          <h1>ARTDIVER</h1>
        </NavLink> 
        <NavMenu>
          <NavLink to='/exhibitions' activeStyle>
            EXHIBITIONS
          </NavLink>
          <NavLink to='/museums-galleries' activeStyle>
            MUSEUMS / GALLERIES
          </NavLink>

          <NavLink to='/contact' activeStyle>
            お問い合わせ
          </NavLink>
          {!currentUser &&
          <>
          <NavLink to='/signup' activeStyle>
            新規登録
          </NavLink>
          </>}
          <NavBtn>
            {!currentUser &&
              <>
                <NavBtnLink to='/login'>ログイン</NavBtnLink>
              </>}
          </NavBtn>

          <NavBtn >
            {currentUser && 
              <>
                <NavBtnLink onClick={handleSignOut} to='#'>ログアウト</NavBtnLink>
              </>}
          </NavBtn> 
        </NavMenu>

        <Bars onClick={showSidebar}/>
        <SidebarNav sidebar={sidebar}>
          <SidebarCloseIcon to ='#' onClick={showSidebar} />
          <SidebarWrap>
            {SidebarData.map((item, index) => {
              return <SubMenu item={item} key={index} />;
            })}
                      {!currentUser &&
          <>
          <NavLink to='/signup' activeStyle>
            新規登録
          </NavLink>
          </>}
          <NavBtn>
            {!currentUser &&
              <>
                <NavBtnLink to='/login'>ログイン</NavBtnLink>
              </>}
          </NavBtn>

          <NavBtn >
            {currentUser && 
              <>
                <NavBtnLink onClick={handleSignOut} to='#'>ログアウト</NavBtnLink>
              </>}
          </NavBtn> 

          </SidebarWrap>
        </SidebarNav>
      </Nav>
    </>
  )
}

export default Navbar
